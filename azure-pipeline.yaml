# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'DevOpsTest.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

- task: VSBuild@1
  displayName: 'Build'
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=false'

# - task: MsixPackaging@1
#   inputs:
#     outputPath: '$(appxPackageDir)\DevOpsTest.msix'
#     solution: '$(solution)'
#     clean: false
#     generateBundle: false
#     buildConfiguration: '$(buildConfiguration)'
#     buildPlatform: '$(buildPlatform)'
#     updateAppVersion: false
#     appPackageDistributionMode: 'SideloadOnly'
#     msbuildLocationMethod: 'version'
#     msbuildVersion: 'latest'
#     msbuildArchitecture: 'x86'

# - task: MsixSigning@1
#   inputs:
#     package: '$(Build.ArtifactStagingDirectory)\**\*.msix*'
#     certificate: 'Contoso.pfx'
#     passwordVariable: 'PfxPass'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(appxPackageDir)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
